/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define GAME 4

&lt {
    flavor = "tap-preferred";
    quick-tap-ms = <200>;
};
/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
//            |  Q  |  W  |  F  |  P  |  B  |                 |  J  |  L  |  U   |  Z  |  ;  |
//            |  A  |  R  |  S  |  T  |  G  |                 |  M  |  N  |  E   |  I  |  O  |
//            |  Y  |  X  |  C  |  D  |  V  |                 |  K  |  H  |  ,   |  .  |  /  |
//                              | TAB | SPC |                 | BSP | ENT |
            bindings = <
&kp Q      &kp W      &kp F       &kp P       &kp B     &kp J   &kp L       &kp U       &kp Z      &kp SEMI
&hm LGUI A &hm LALT R &hm LCTRL S &hm LSHFT T &kp G     &kp M   &hm LSHFT N &hm LCTRL E &hm RALT I &hm LGUI O
&kp Y      &kp X      &kp C       &kp D       &kp V     &kp K   &kp H       &kp COMMA   &kp DOT    &kp FSLH
                           &kp TAB &lt RAISE SPACE     &lt LOWER BSPC &kp RET
            >;
		};

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
//                           |     |  @  |  #  |  $  |  %  |                 |  ^  |  |  |  &  |  §  |     |
//                           | ESC |  [  |  (  |  {  |  ~  |                 |  _  |  }  |  )  |  ]  |  *  |
//                           |  !  |  °  |  "  |  '  |  `  |     |     |     |  -  |  +  |  =  |  €  |  \  |
            bindings = <
&trans     &kp LS(N2)       &kp LS(N3) &kp LS(N4) &kp LS(N5)                  &kp LS(N6) &kp PIPE  &kp LS(N7) &kp LS(RA(S))  &trans
&kp ESC    &kp LBKT         &kp LS(N9) &kp LBRC   &kp TILDE                   &kp UNDER  &kp RBRC  &kp LS(N0) &kp RBKT       &kp LS(N8)
&kp LS(N1) &kp LS(RA(SEMI)) &kp DQT    &kp SQT    &kp GRAVE                   &kp MINUS  &kp PLUS  &kp EQUAL  &kp RA(N5)     &kp BSLH
                                       &trans    &trans                       &trans    &trans
            >;
		};

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
//            |     | WOR |     |     | WOB |                |  v  |  <  |  7  |  8  |  9  |
//            | ESC |     | PGU | BSW | DEW |                |     |  0  |  4  |  5  |  6  |
//            | TAB | HOM | PGD | END | DEL |                |  ^  |  >  |  1  |  2  |  3  |
//                              |     |     |                |     |     |
            bindings = <
&trans   &kp LC(RIGHT) &trans     &trans    &kp LC(LEFT)            &kp DOWN &kp RIGHT &kp N7 &kp N8 &kp N9
&kp ESC  &trans        &kp PG_UP  &kp LC(W) &kp LC(DEL)             &trans   &kp N0    &kp N4 &kp N5 &kp N6
&kp TAB  &kp HOME      &kp PG_DN  &kp END   &kp DEL                 &kp UP   &kp LEFT  &kp N1 &kp N2 &kp N3
                                  &trans    &trans                  &trans   &trans
            >;
		};

        adjust_layer {
// ------------------------------------------------------------------------------------------------------------
//            |  1  |  2  |  3  |  4  |  5  |                |  6  |  7  |  8  |  9  |  0  |
//            |     |     | bt0 | bt1 | out |                |     | bt2 | bt3 |     |     |
//            |     |     |     |     |     |                |     |     |     |     |     |
//                  |     |     |     |     |                |     |     |     |     |
            bindings = <
&kp N1   &kp N2      &kp N3       &kp N4       &kp N5              &kp N6        &kp N7       &kp N8       &kp N9       &kp N0
&trans   &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &out OUT_TOG        &kp K_VOL_UP  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans
&trans   &trans      &trans       &trans       &trans              &kp K_VOL_DN  &trans       &trans       &trans       &trans
                                  &trans       &trans              &trans        &trans
            >;
        };
    };
};
